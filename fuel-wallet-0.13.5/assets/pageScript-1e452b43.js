import{ag as r,M as u,C as f,E as w,H as d,A as l,U as m,t as p,q as y,N as g,a1 as v,W as C}from"./config-27341492.js";import{d as h}from"./promise-632341a0.js";import{B as q}from"./BaseConnection-538d8d30.js";const N=typeof window<"u";class A extends q{constructor(e){super(),this.isListenerAdded=!1,this.queue=[],this._retry=0,this._hasWallet=h(),this.onMessage=t=>{const n=Object.freeze(t);if(!this.acceptMessage(n))return;const{data:i}=n;this.onCommunicationMessage(i)},this.connectorName=e?e.name:"",this.connectors=e?[e]:[],this.handleFuelInjected(),this._injectionTimeout=setInterval(this.handleFuelInjected.bind(this),100),this.handleIsReady()}executeQueuedRequests(){let e=this.queue.shift();for(;e;)this.sendRequest(e),e=this.queue.shift()}handleIsReady(){typeof document>"u"||document.addEventListener("FuelLoaded",()=>{this._retry=0,this._hasWallet.resolve(!0),this._hasWallet=h(),this.handleFuelInjected(),this.emit(r.load,!0)})}hasConnector(e){return!!this.connectors.find(t=>t.name===e)}addConnector(e){if(e.name==="Fuel Wallet"&&(this.connectorName=e.name),this.hasConnector(e.name))throw new Error(`"${e.name}" connector already exists!`);this.connectors.push(e),this.emit(r.connectors,this.listConnectors())}removeConnector(e){const t=this.connectors.findIndex(n=>n.name===e);t>-1&&this.connectors.splice(t,1)}listConnectors(){return this.connectors}async selectConnector(e){const t=this.connectorName;this.connectorName=e;try{const n=await this.client.timeout(1e3).request("connectorName",{});let i=this.connectors.find(c=>c.name===n);i||(i={name:n},this.addConnector({name:n})),this.emit(r.currentConnector,i)}catch{throw this.connectorName=t,new Error(`"${e}" connector not found!`)}return!0}acceptMessage(e){const{data:t}=e;return e.origin===window.origin&&t.target===this.connectorName&&t.type!==u.request}async hasWallet(){return this._hasWallet.promise}async sendRequest(e){e&&(!window.fuel&&this.connectorName?this.queue.push(e):this.postMessage({type:u.request,target:f,connectorName:this.connectorName,request:e}))}postMessage(e,t){if(!this.hasConnector(this.connectorName))throw new Error(`Wallet Connector ${this.connectorName} not found!`);window.postMessage(e,t||window.origin)}bindFuelConnectors(e){!e||e===this||(e.on(r.connectors,n=>{this.connectors=n,this.emit(r.connectors,n)}),e.on(r.currentConnector,n=>{this.selectConnector(n.name)}),this.connectors=e.listConnectors(),this.emit(r.connectors,this.listConnectors()),this.connectorName||this.selectConnector(e.connectorName))}handleFuelInjected(){if(this._retry===9){clearInterval(this._injectionTimeout),this._hasWallet.resolve(!1),this.client.rejectAllPendingRequests("Timeout fuel not detected on the window!");return}this._retry++,N&&(this.isListenerAdded||(window.addEventListener(w,this.onMessage.bind(this)),this.isListenerAdded=!0),window.fuel&&(clearInterval(this._injectionTimeout),this._hasWallet.resolve(!0),this.bindFuelConnectors(window.fuel),this.executeQueuedRequests()))}}function b(s){const e=s.inputs?.map(t=>{switch(t.type){case d.Message:return t.recipient;case d.Coin:return t.owner;default:return}})[0];if(!e)throw new Error("No possible signer found!");return l.fromB256(m(e)).toString()}class E extends A{async ping(){return this.client.timeout(1e3).request("ping",{})}async isConnected(){try{return await this.client.request("isConnected",{})}catch{return!1}}async connect(){return this.client.request("connect",{})}async disconnect(){return this.client.request("disconnect",{})}async accounts(){return this.client.request("accounts",{})}async currentAccount(){return this.client.request("currentAccount",{})}async signMessage(e,t){if(!t.trim())throw new Error("Message is required");return this.client.request("signMessage",{address:e,message:t})}async sendTransaction(e,t,n){if(!e)throw new Error("Transaction is required");const i=p(e),c=n||e.signer||b(i);return this.client.request("sendTransaction",{address:c,provider:t,transaction:JSON.stringify(i)})}async assets(){return this.client.request("assets",{})}async addAsset(e){return this.addAssets([e])}async addAssets(e){return this.client.request("addAssets",{assets:e})}async addAbi(e){return this.client.request("addAbi",{abiMap:e})}async getAbi(e){return this.client.request("getAbi",{contractId:e})}async hasAbi(e){return!!await this.getAbi(e)}async network(){return this.client.request("network",{})}async networks(){return this.client.request("networks",{})}async addNetwork(e){return this.client.request("addNetwork",{network:e})}async version(){return this.client.request("version",{})}on(e,t){return super.on(e,t)}}class T extends y{constructor(e,t){super(e,t),this.provider=t}async signMessage(e){return this.provider.walletConnection.signMessage(this.address.toString(),e)}async sendTransaction(e){return this.provider.sendTransaction({...e,signer:this.address.toString()})}}class a extends g{constructor(e,t){super(e,t),this.walletConnection=t.walletConnection}static async create(e,t){const n=new a(e,t);return await n.fetchChainAndNodeInfo(),n}async sendTransaction(e){const t=await this.walletConnection.sendTransaction(e,{url:this.url});return new v(t,this)}}const o={};class M extends E{constructor(){super(...arguments),this.utils={createAddress:e=>(console.warn("Do not use this method! It will be removed in the next release."),l.fromString(e))},this.events=r}async getProvider(){const e=await this.network();if(o.provider)return o.provider;const t=await a.create(e.url,{walletConnection:this});return o.provider=t,this.on(r.network,async n=>{o.provider?.connect(n.url)}),o.provider}async getWallet(e){const t=await this.getProvider();return new T(e,t)}}const W=s=>new Proxy(s,{get(e,t){return e[t]},set(e,t,n){return Object.hasOwn(e,t)&&["_eventsCount","_events","connectorName"].includes(t)?(e[t]=n,!0):!1},defineProperty(e,t){return Object.hasOwn(e,t)?e[t]:!1},deleteProperty(){return!1}});function _(s,e){const t=W(s);if(Object.defineProperty(e,"fuel",{value:s,writable:!1,enumerable:!0,configurable:!0}),typeof document<"u"){const n=new CustomEvent("FuelLoaded",{detail:t});document.dispatchEvent(n)}}function F(s,e=window){if(e?.fuel){e.fuel.addConnector(s);return}_(new M(s),e)}F({name:C});
//# sourceMappingURL=pageScript-1e452b43.js.map
