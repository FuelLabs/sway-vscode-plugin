import{R as h,B as o,M as c,P as d,C as r,E as m,d as l,W as g}from"./config-27341492.js";class i{constructor(e){this.onDisconnect=()=>{clearInterval(this._tryReconect),this._tryReconect=setInterval(()=>{console.debug("[FUEL WALLET] reconnecting!");try{this.connection=this.connect(),console.debug("[FUEL WALLET] reconnected!"),clearInterval(this._tryReconect)}catch(t){t.message==="Extension context invalidated."&&(clearInterval(this._tryReconect),console.debug("[FUEL WALLET] context invalidated!"))}},h)},this.keepAlive=()=>{try{this.connection.postMessage({target:o,type:c.ping}),this._keepAlive=setTimeout(this.keepAlive,d)}catch{this.onDisconnect()}},this.onMessageFromExtension=t=>{t.target===r&&this.postMessage(t)},this.onMessageFromWindow=t=>{const{data:n,origin:a}=Object.freeze(t);this.shouldAcceptMessage(n,a)&&(n.type===c.request&&n.request.method==="connectorName"?this.sendConnectorName(n.request.id):this.connection.postMessage({...n,target:o}))},this.connection=this.connect(),this.connectorName=e,window.addEventListener(m,this.onMessageFromWindow),this.keepAlive()}connect(){const e=chrome.runtime.connect(chrome.runtime.id,{name:o});return e.onMessage.addListener(this.onMessageFromExtension),e.onDisconnect.addListener(this.onDisconnect),e}destroy(){this.connection.disconnect(),clearInterval(this._tryReconect),clearTimeout(this._keepAlive)}static start(e){return new i(e)}shouldAcceptMessage(e,t){return t===window.location.origin&&e.target===r&&e.connectorName===this.connectorName}sendConnectorName(e){this.postMessage({type:c.response,response:l.createJSONRPCSuccessResponse(e,this.connectorName),target:this.connectorName})}postMessage(e){const t={...e,target:this.connectorName};window.postMessage(t,window.location.origin)}}const p="/assets/pageScript-1e452b43.js";i.start(g);async function u(){const s=document.createElement("script");s.src=chrome.runtime.getURL(p),s.type="module",s.onload=()=>{s.remove()},(document.head||document.documentElement).appendChild(s)}u();
//# sourceMappingURL=contentScript.ts-2d48445c.js.map
